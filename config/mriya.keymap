/*
 * Copyright (c) 2023 Andrei Gaevskii
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };

&mt { quick_tap_ms = <200>; };

/ {
    combos {
        compatible = "zmk,combos";

        lang_right {
            bindings = <&change_lang>;
            key-positions = <30 31>;
        };

        lang_left {
            bindings = <&change_lang>;
            key-positions = <28 29>;
        };

        enter_left {
            bindings = <&kp ENTER>;
            key-positions = <15 17>;
        };

        enter_right {
            bindings = <&kp ENTER>;
            key-positions = <18 20>;
        };

        backspace_left {
            bindings = <&kp BACKSPACE>;
            key-positions = <27 28>;
        };

        backspace_right {
            bindings = <&kp BACKSPACE>;
            key-positions = <32 31>;
        };

        delete_left {
            bindings = <&kp DELETE>;
            key-positions = <26 27>;
        };

        delete_right {
            bindings = <&kp DELETE>;
            key-positions = <32 33>;
        };
    };

    macros {
        change_lang: change_lang {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_ALT &kp LEFT_SHIFT &kt LEFT_ALT &tog 1>;
            label = "CHANGE_LANG";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &kp ESCAPE  &kp Q  &kp W     &kp E      &kp R            &kp T        &kp Y            &kp U            &kp I      &kp O      &kp P     &kp LBKT
  &kp LCTRL   &kp A  &kp S     &kp D      &kp F            &kp G        &kp H            &kp J            &kp K      &kp L      &kp SEMI  &mt RCTRL SQT
  &kp LALT    &kp Z  &kp X     &kp C      &kp V            &kp B        &kp N            &kp M            &kp COMMA  &kp DOT    &kp FSLH  &kp RIGHT_BRACKET
                     &kp LGUI  &lt 4 ESC  &mt LSHFT SPACE  &lt 3 TAB    &lt 2 BACKSPACE  &mt RSHFT SPACE  &lt 4 DEL  &kp MINUS
            >;
        };

        colemak {
            bindings = <
  &trans  &kp Q  &kp W   &kp F   &kp P   &kp B     &kp J   &kp L   &kp U      &kp Y       &kp SEMICOLON  &trans
  &trans  &kp A  &kp R   &kp S   &kp T   &kp G     &kp M   &kp N   &kp E      &kp I       &kp O          &trans
  &trans  &kp Z  &kp X   &kp C   &kp D   &kp V     &kp K   &kp H   &kp COMMA  &kp PERIOD  &kp SLASH      &trans
                 &trans  &trans  &trans  &trans    &trans  &trans  &trans     &trans
            >;
        };

        lower_layer {
            bindings = <
  &kp GRAVE       &kp F1    &kp F2  &kp F3     &kp F4    &kp F5       &kp F6     &kp F7    &kp F8     &kp F9    &kp F10   &kp F11
  &mt LCTRL PLUS  &kp EXCL  &kp AT  &kp HASH   &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp STAR   &kp LPAR  &kp RPAR  &mt RCTRL MINUS
  &mt LALT EQUAL  &kp N1    &kp N2  &kp N3     &kp N4    &kp N5       &kp N6     &kp N7    &kp N8     &kp N9    &kp N0    &trans
                            &trans  &lt 5 TAB  &trans    &mo 4        &mo 4      &trans    &lt 5 DEL  &trans
            >;
        };

        math_layer {
            bindings = <
  &trans  &trans           &kp KP_N7        &kp KP_N8  &kp KP_N9        &kp EQUAL    &kp EQUAL      &kp LEFT_BRACE    &kp RIGHT_BRACE  &trans     &trans         &trans
  &trans  &trans           &kp KP_N4        &kp KP_N5  &kp KP_N6        &kp MINUS    &kp PLUS       &kp MINUS         &kp ASTERISK     &kp SLASH  &kp BACKSLASH  &kp PIPE
  &trans  &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_N2  &kp KP_NUMBER_3  &kp UNDER    &kp LESS_THAN  &kp GREATER_THAN  &trans           &trans     &trans         &trans
                           &trans           &trans     &trans           &trans       &trans         &trans            &trans           &trans
            >;
        };

        raise_layer {
            bindings = <
  &trans           &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp EQUAL    &kp C_VOL_UP  &kp HOME   &kp END    &kp PRINTSCREEN  &kp SLCK         &kp CAPS
  &mt LCTRL EQUAL  &sk LEFT_WIN          &sk LEFT_ALT           &sk LCTRL         &sk LEFT_SHIFT     &kp MINUS    &kp LEFT      &kp DOWN   &kp UP     &kp RIGHT        &kp INS          &mt RCTRL K_APP
  &kp MINUS        &kp BACKSLASH         &kp PIPE               &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp UNDER    &kp C_VOL_DN  &kp PG_UP  &kp PG_DN  &kp K_MUTE       &kp PAUSE_BREAK  &trans
                                         &tog 1                 &trans            &trans             &lt 5 RET    &lt 5 ESC     &trans     &trans     &trans
            >;
        };

        adjust_layer {
            bindings = <
  &bootloader  &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &bootloader
  &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
  &sys_reset   &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &sys_reset
                             &none         &trans        &none         &trans          &trans        &none         &trans        &none
            >;
        };
    };
};
